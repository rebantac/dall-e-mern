import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

import { preview } from '../assets';
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from '../components';


const CreatePost = () => {
  const navigate = useNavigate() // helps to go back to the home page

  const [form, setForm] = useState({
    name: '',
    prompt: '',
    photo: '',
  });

  const [generatingImg, setGeneratingImg] = useState(false); // will be implemented when in the process the fetching the img from the API
  const [loading2, setLoading2] = useState(false);


  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);
        const response = await fetch('https://dall-e-backend-64ju.onrender.com/api/v1/dalle', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ prompt: form.prompt }),
        });

        const data = await response.json();


        setForm({ ...form, photo: data.photo })
        // console.log(form?.photo)
        // console.log(form?.photo)

      } catch (error) {
        console.log(error)

      } finally {
        setGeneratingImg(false);
      }

    } else {
      alert('Please enter a prompt')
    }

  }


  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value })
  };


  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt })
  };


  const handleSubmit = async (e) => {
    e.preventDefault();

    if (form.prompt) {
      setLoading2(true);

      try {
        const response = await fetch('https://dall-e-backend-64ju.onrender.com/api/v1/post', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ ...form }),
        })

        await response.json(); // this implies that we got the data successfully
        if (response.status == 200) {
          alert('Success');
          navigate('/'); // navigates back to home page 
        } else {
          alert(`Error Code:- ${response.status}`)
        }


      } catch (error) {
        alert(error)

      } finally {
        console.log("Ho Gya upload")

      }

    } else {
      alert('Please enter a prompt to generate an image')

    }

  }


  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">Create</h1>

        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Create imaginative and visually stunning images generated by DALL-E AI and share them with the community</p>
      </div>

      <form className="mt-16 max-w-3xl" onSubmit={handleSubmit}>
        <div className="flex flex-col gap-5">
          <FormField
            labelName='Your Name'
            type='text'
            name='name'
            placeholder='John Doe'
            value={form.name}
            handleChange={handleChange}
          />

          <FormField
            labelName='Prompt'
            type='text'
            name='prompt'
            placeholder='An Impressionist oil painting of sunflowers in a purple vaseâ€¦'
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">

            {form.photo ? (
              <img
                src={form.photo}
                alt={form.prompt}
                className="w-full h-full object-contain"
                onLoad={() => {
                  console.log("Heyy Load Complete")

                  setLoading2(false)
                }}
              />
            ) : (
              <img
                src={preview}
                alt='preview'
                className="w-full h-full object-contain opacity-40"
              />
            )}

            {generatingImg && (
              <div className='absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg'>
                <Loader />
              </div>
            )}
          </div>
        </div>

        <div className="mt-5 flex gap-5">
          <button
            type='button'
            onClick={generateImage}
            className=" text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center"
          >
            {generatingImg ? 'Generating...' : 'Generate'}
          </button>

        </div>

        <div className="mt-10">
          <p className="mt-2 text-[#666e75] text-[14px]"> Once you have created the image you want, you can share it with others in the community</p>

          <button
            type='submit'
            className="mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center"
          >
            {loading2 ? 'Sharing...' : 'Share with the Community'}
          </button>
        </div>
      </form>

    </section>
  )
}

export default CreatePost;